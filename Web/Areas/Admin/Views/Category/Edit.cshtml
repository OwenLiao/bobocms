@model Category
@using (Html.BeginForm(Model == null ? "Add" : "Edit", "Category"))
{ @Html.AntiForgeryToken()
    <div class="form-horizontal" role="form">
        <h4>@ViewBag.TitleMessage</h4>
        <hr />
        @Html.ValidationSummary(true)
        @*<div class="form-group">
                @Html.LabelFor(model => model.name, new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.name)
                </div>
            </div>*@
        @*@Html.HiddenFor(model => model.CallIndex, new { Value = Common.MyRequest.GetQueryString("callindex") })*@
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CallIndex, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.CallIndex, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CallIndex)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryNavCallIndex, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.CategoryNavCallIndex, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryNavCallIndex)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.categoryTypeId, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @*@Html.DropDownList("ParentCategory", String.Empty)*@
                @Html.DropDownListFor(model => model.categoryTypeId, ViewBag.CategoryType as SelectList, "---请选择---")
                @Html.ValidationMessageFor(model => model.categoryTypeId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.parentId, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @{string def = Model == null ? "" : Model.parentId.ToString();}
                @*@Html.DropDownList("ParentCategory", String.Empty)*@
                @Html.DropDownListFor(model => model.parentId, ViewBag.ParentCategory as SelectList, "---请选择---")
                @Html.ValidationMessageFor(model => model.parentId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Content, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextAreaFor(model => model.Content, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Content)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SortId, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.SortId, new { @class = "form-control", @Value = "99" })
                @Html.ValidationMessageFor(model => model.SortId)
            </div>
        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.IsLock, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.CheckBox("IsLock", (Model != null && Model.IsLock == true) ? true : false)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SeoTitle, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.SeoTitle, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SeoTitle)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SeoKeywords, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.SeoKeywords, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SeoKeywords)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SeoDescription, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextAreaFor(model => model.SeoDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SeoDescription)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <input type="submit" value="保存" class="btn btn-default" />
            </div>
        </div>
    </div>

}
